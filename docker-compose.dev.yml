version: '3.8'
services:
  gym-report:
    build: gym-report-service
    image: gym-report
    environment:
      INTERACTION_BETWEEN_MICROSERVICES: activemq
      EUREKA_URI: eureka
      REDIS_HOST: redisCache
      ACTIVEMQ_URI: activemq
      NOSQL_TYPE: mongo
      MONGODB_HOSTS: mongodb1:27017, mongodb2:27018
      MONGODB_USER: mongodb
      MONGODB_PASSWORD: mongodb
      MONGODB_DATABASE: gym_db
      MONGODB_RS: rs0
    depends_on:
      - redisCache
      - eureka
      - gateway
      - mongodb1
      - mongodb2
    ports:
      - "0:8084"

  gym-main:
    build: gym-main-service
    image: gym-main
    environment:
      INTERACTION_BETWEEN_MICROSERVICES: activemq
      DB_HOST: postgresDB
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_URI: eureka
      REDIS_HOST: redisCache
      ACTIVEMQ_URI: activemq
    depends_on:
      - postgresDB
      - redisCache
      - eureka
      - gateway
    ports:
      - "0:8083"

  activemq:
    image: apache/activemq-artemis:latest
    container_name: activemq
    ports:
      - "61616:61616" # BrokerPort
      - "8161:8161"   # WebConsolePort
    environment:
      ARTEMIS_USER: activemq
      ARTEMIS_PASSWORD: activemq

  gateway:
    build: gateway-server
    image: gateway
    environment:
      EUREKA_URI: eureka
    depends_on:
      - eureka
    ports:
      - "8080:8080"

  eureka:
    build: eureka-server
    image: eureka
    ports:
      - "8761:8761"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - "9090:9090"
    depends_on:
      - gym-main

  redisCache:
    image: redis:latest
    command: redis-server --requirepass "redis"
    ports:
      - "6379:6379"

  postgresDB:
    image: postgres:latest
    environment:
      POSTGRES_DB: gymDB-dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: postgres
    ports:
      - "80:80"
    depends_on:
      - postgresDB

  mongodb1:
    container_name: mongodb1
    image: mongo:latest
    entrypoint: [ "bash", "mongo-entrypoint.sh" ]
    command: [ "mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "27017", "--keyFile", "/etc/mongodb/pki/keyfile" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/keyfile:/etc/mongodb/pki/keyfile
      - ./mongo/mongo-entrypoint.sh:/mongo-entrypoint.sh
      - mongodb1_data:/data/db

  mongodb2:
    container_name: mongodb2
    image: mongo:latest
    entrypoint: [ "bash", "mongo-entrypoint.sh" ]
    command: [ "mongod", "--replSet", "rs0", "--bind_ip_all", "--port", "27018", "--keyFile", "/etc/mongodb/pki/keyfile" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodb
    ports:
      - "27018:27018"
    volumes:
      - ./mongo/keyfile:/etc/mongodb/pki/keyfile
      - ./mongo/mongo-entrypoint.sh:/mongo-entrypoint.sh
      - mongodb2_data:/data/db

  mongo-setup:
    image: mongo:latest
    container_name: mongo-setup
    depends_on:
      - mongodb1
      - mongodb2
    restart: on-failure
    entrypoint: [ "bash", "/mongo-rs-init.sh" ]
    volumes:
      - ./mongo/mongo-rs-init.sh:/mongo-rs-init.sh

volumes:
  postgres_data_dev:
  mongodb1_data:
  mongodb2_data: